#!/usr/bin/env bash

set -e
set -o pipefail

files=()
FORCE_RELOAD_CACHE=0

print_help() {
  cat <<EOF
usage: cached-exec [-f | --force] <files>... -- <command>

Runs a command if a set of source files has changed.

OPTIONS
       <files>...
            Set of files to use for controlling the cache.
       <command>
            Command to execute.
        -f, --force
            If specified, forces rerunning the command and updates the cache.
EOF
}

while [[ $# -gt 0 ]]; do
  case $1 in
    --help)
      print_help
      exit 0
      ;;
    -f|--force)
      FORCE_RELOAD_CACHE=1
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      files+=($1)
      shift
      ;;
  esac
done

if [ ${#files[@]} -eq 0 ]; then
  >&2 echo "error: no files specified"
  exit 1
fi

CACHED_EXEC_ROOT=${CACHED_EXEC_ROOT:-$PWD/.cached-exec}
mkdir -p $CACHED_EXEC_ROOT

expr_key=$CACHED_EXEC_ROOT/$(echo ${files[@]} $@ | sha256sum | awk '{print $1}')

files_new_hash=`sha256sum ${files[@]} | sha256sum`
code=$?
if ! [ "$code" -eq "0" ]; then
  exit $code
fi
if [ -f "$expr_key" ]; then
  files_old_hash="$(cat "$expr_key")"
else
  files_old_hash=""
fi

if [ "$files_new_hash" != "$files_old_hash" ] || [ $FORCE_RELOAD_CACHE -eq 1 ]; then
  eval "$@"
  echo $files_new_hash > $expr_key
fi
